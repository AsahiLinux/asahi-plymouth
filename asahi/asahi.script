/* SPDX-License-Identifier: MIT */

/* Asahi Linux Plymouth Theme
 *
 * This theme emulates the macOS boot splash, with the Asahi logo
 * replacing the Apple logo.
 *
 *
 *
 * (C) 2022 James Calligeros
 */

// Init globals
width;
height;
logo;
beachball;
prompt;
message;
entry;


fun rotate_beachball(i) {
    i = Math.Int(i); // Plymouth needs to convert to int for some reason

    if (! BBRotated[i]) {
        BBRotated[i] = beachball.image.Rotate((Math.Pi * 2 * i) / beachball.speed);
    }

    return BBRotated[i];

}


fun init() {
    // Get display properties
    width = Window.GetWidth();
    height = Window.GetHeight();

    // Set background colour to black
    Window.SetBackgroundTopColor(0.0, 0.0, 0.0);
    Window.SetBackgroundBottomColour(0.0, 0.0, 0.0);

    // Display logo as Plymouth sprite
    logo.image = Image("asahi.png");
    logo.sprite = Sprite(logo.image);
    logo.x = ((width / 2) - (logo.image.GetWidth() / 2));
    logo.y = ((height / 2) - (logo.image.GetHeight() / 2));
    logo.sprite.SetPosition(logo.x, logo.y, 1000);
    logo.sprite.SetOpacity(1);

    // Initialise Apple spinner
    beachball.image = ImageNew("beachball3.png");
    beachball.sprite = SpriteNew();
    beachball.sprite.SetImage(rotate_beachball(0));
    beachball.x = ((width / 2) - (beachball.image.GetWidth() / 2));
    beachball.y = ((height/ 2) + (beachball.image.GetHeight()) + (logo.y * 0.65));
    beachball.sprite.SetPosition(beachball.x, beachball.y, 1000);
    beachball.i = 0;
    beachball.angle = 0;
    beachball.speed = 52;

    // Set up sprites for on-screen messages and dialog boxes
    info = SpriteNew();
    entry.image = Image("text_box.png");
    entry.sprite = Sprite(entry.image);
    // Use position of beachball for text entry
    entry.sprite.SetPosition(beachball.x, beachball.y, 1000);

    prompt = SpriteNew();
    prompt.SetPosition(beachball.x, (beachball.y + 40), 1000);

    dialog.entry = entry;
    dialog.message = prompt;
    dialog.bullet_image = ImageNew("bullet.png");
    dialog.visible = 0;

    message = Sprite(); // This is for non-interactive messages

    diplay_prompt(0);
}


fun display_prompt(vis) {
    // Make dialog prompt visible
    dialog.visible = vis;

    dialog.entry.sprite.SetOpacity(vis);
    dialog.prompt.SetOpacity(vis);

    for (i=0; dialog.bullet[i]; i++) {
        dialog.bullet[i].sprite.SetOpacity(vis);
    }
}


fun disp_refresh() {
    if (dialog.visible) {
        beachball.sprite.SetOpacity(0);
    } else {
        beachball.i += 1;
        beachball.i %= beachball.speed;
        beachball.sprite.SetImage(rotate_beachball(beachball.i));
        beachball.sprite.SetOpacity(1);
    }
}

fun return_normal() {
    display_prompt(0);
}


fun password_prompt(text) {
    // There has to be a better way of doing this
    display_prompt(1);

    beachball.sprite.SetOpacity(0);
    dialog.message.SetImage(Image.Text(text, 0.75, 0.75, 0.75));

    if (bullets > 0) {
        dialog.message.SetOpacity(0);
    }

    for (i=0; dialog.bullet[i] || i<bullets; i++) {
        if (! dialog.bullet[i]) {
            dialog.bullet[i].sprite = SpriteNew();
            dialog.bullet[i].sprite.SetImage(dialog.bullet_image);
            dialog.bullet[i].x = dialog.entry.sprite.GetX() + i * dialog.bullet_image.GetWidth() + dialog.entry.image.GetWidth() * 0.03;
            dialog.bullet[i].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[i].z = dialog.entry.sprite.GetZ() + 1;
            dialog.bullet[i].sprite.SetPosition(dialog.bullet[i].x, dialog.bullet[i].y, dialog.bullet[i].z);
        }

        if (i < bullets) {
            dialog.bullet[i].sprite.SetOpacity(1);
        } else {
            dialog.bullet[i].sprite.SetOpacity(0);
        }

        if (dialog.bullet[i].x - dialog.entry.sprite.GetX() >= dialog.entry.image.GetWidth() * 0.97) {
            dialog.bullet[i].sprite.SetOpacity(0);
        }
    }
}


fun show_message(text) {
    message.text = Image.Text(text, 1, 1, 1, "center");
    message.sprite.SetImage(message.text);
    message.x = ((width / 2) - (message.text.GetWidth() / 2));

    // Display message above the beachball
    message.sprite.SetPosition((message.x), (beachball.y - 80), 1001);
}


fun quit_cb() {
    beachball.sprite.SetOpacity(0);
}




// Run the splash screen
init();

// Declare callbacks to Plymouth API
Plymouth.SetRefreshFunction(disp_refresh);
Plymouth.SetDisplayNormalFunction(return_normal);
Plymouth.SetDisplayPasswordFunction(password_prompt);
Plymouth.SetMessageFunction(show_message);
Plymouth.SetQuitFunction(quit_cb);
Plymouth.SetUpdateStatusFunction(show_message);








